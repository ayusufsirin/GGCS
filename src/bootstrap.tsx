// bootstrap.tsx (or your page that renders the dashboard)
import React, { useEffect } from "react";
import { collectInstanceBindings } from "./middleware/config-scan";
import { attachBindings } from "./middleware/binder";
import { WidgetAttrProvider } from "./middleware/widget-attr";
import { config } from "./config";
import { HUDWidget } from "./widgets/HUDWidget";
import { MapWidget } from "./widgets/MapWidget";
import { UndefinedWidget } from "./widgets/UndefinedWidget";

// 1) Scan once and attach global bindings
const bindings = collectInstanceBindings(config);

console.debug("bindings", bindings);

const detachAll = attachBindings(bindings);
// (Call detachAll on app shutdown if needed)

function WidgetFrame({ instanceId, name }: { instanceId: string; name: string }) {
  // Pick the component by widget name
  let Comp = name === "hud" ? HUDWidget : name === "map" ? MapWidget : () => null;
  switch (name) {
    case "hud": Comp = HUDWidget; break;
    case "map": Comp = MapWidget; break;
    default: Comp = UndefinedWidget; break;
  }
  return (
    <WidgetAttrProvider instanceId={instanceId}>
      <Comp />
    </WidgetAttrProvider>
  );
}

// Example: render two instances from your config paths
export function Dashboard() {
  // (optional) ensure detach on unmount if you mounted attachBindings here
  useEffect(() => detachAll, []);
  return (
    <>
      {/*TODO: This part should be auto generated by Grid and Tab elements*/}
      <WidgetFrame instanceId="tabs.items.home.grids.items.hud" name="hud" />
      <WidgetFrame instanceId="tabs.items.home.grids.items.map" name="map" />
    </>
  );
}
